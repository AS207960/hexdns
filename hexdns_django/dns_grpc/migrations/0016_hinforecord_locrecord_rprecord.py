# Generated by Django 3.0.7 on 2020-07-14 12:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('dns_grpc', '0015_reversensrecord'),
    ]

    operations = [
        migrations.CreateModel(
            name='RPRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('record_name', models.CharField(default='@', max_length=255, verbose_name='Record name (@ for zone root)')),
                ('ttl', models.PositiveIntegerField(default=3600, verbose_name='Time to Live (seconds)')),
                ('mailbox', models.CharField(max_length=255)),
                ('txt', models.CharField(max_length=255)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns_grpc.DNSZone')),
            ],
            options={
                'verbose_name': 'RP record',
                'verbose_name_plural': 'RP records',
            },
        ),
        migrations.CreateModel(
            name='LOCRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('record_name', models.CharField(default='@', max_length=255, verbose_name='Record name (@ for zone root)')),
                ('ttl', models.PositiveIntegerField(default=3600, verbose_name='Time to Live (seconds)')),
                ('latitude', models.FloatField(validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(-90)], verbose_name='Latitude (deg)')),
                ('longitude', models.FloatField(validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)], verbose_name='Longitude (deg)')),
                ('altitude', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(-100000.0), django.core.validators.MaxValueValidator(42849672.95)], verbose_name='Altitude (m)')),
                ('size', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90000000.0)], verbose_name='Size (m)')),
                ('hp', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90000000.0)], verbose_name='Horizontal precision (m)')),
                ('vp', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90000000.0)], verbose_name='Vertical precision (m)')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns_grpc.DNSZone')),
            ],
            options={
                'verbose_name': 'LOC record',
                'verbose_name_plural': 'LOC records',
            },
        ),
        migrations.CreateModel(
            name='HINFORecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('record_name', models.CharField(default='@', max_length=255, verbose_name='Record name (@ for zone root)')),
                ('ttl', models.PositiveIntegerField(default=3600, verbose_name='Time to Live (seconds)')),
                ('cpu', models.CharField(max_length=255, verbose_name='CPU')),
                ('os', models.CharField(max_length=255, verbose_name='OS')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns_grpc.DNSZone')),
            ],
            options={
                'verbose_name': 'HINFO record',
                'verbose_name_plural': 'HINFO records',
            },
        ),
    ]
