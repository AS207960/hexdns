# Generated by Django 3.0.5 on 2020-05-09 23:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DNSZone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("zone_root", models.CharField(max_length=255)),
                ("last_modified", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "DNS Zone", "verbose_name_plural": "DNS Zones",},
        ),
        migrations.CreateModel(
            name="TXTRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                ("data", models.TextField()),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "TXT record",
                "verbose_name_plural": "TXT records",
            },
        ),
        migrations.CreateModel(
            name="SRVRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                (
                    "priority",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                (
                    "weight",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                (
                    "port",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                ("target", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "SRV record",
                "verbose_name_plural": "SRV records",
            },
        ),
        migrations.CreateModel(
            name="ReverseDNSZone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("zone_root_address", models.GenericIPAddressField()),
                (
                    "zone_root_prefix",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(128)]
                    ),
                ),
                ("last_modified", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Reverse DNS Zone",
                "verbose_name_plural": "Reverse DNS Zones",
            },
        ),
        migrations.CreateModel(
            name="PTRRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_address", models.GenericIPAddressField()),
                ("ttl", models.PositiveIntegerField()),
                ("pointer", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.ReverseDNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "PTR record",
                "verbose_name_plural": "PTR records",
            },
        ),
        migrations.CreateModel(
            name="NSRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                ("nameserver", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={"verbose_name": "NS record", "verbose_name_plural": "NS records",},
        ),
        migrations.CreateModel(
            name="NAPTRRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                (
                    "order",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                (
                    "preference",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                ("flags", models.CharField(max_length=255)),
                ("service", models.CharField(max_length=255)),
                ("regexp", models.CharField(max_length=255)),
                ("replacement", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "NAPTR record",
                "verbose_name_plural": "NAPTR records",
            },
        ),
        migrations.CreateModel(
            name="MXRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                ("exchange", models.CharField(max_length=255)),
                (
                    "priority",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(65535)]
                    ),
                ),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={"verbose_name": "MX record", "verbose_name_plural": "MX records",},
        ),
        migrations.CreateModel(
            name="CNAMERecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                ("alias", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "CNAME record",
                "verbose_name_plural": "CNAME records",
            },
        ),
        migrations.CreateModel(
            name="CAARecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                (
                    "flag",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(255)]
                    ),
                ),
                ("tag", models.CharField(max_length=255)),
                ("value", models.CharField(max_length=255)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={
                "verbose_name": "CAA record",
                "verbose_name_plural": "CAA records",
            },
        ),
        migrations.CreateModel(
            name="AddressRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("record_name", models.CharField(default="@", max_length=255)),
                ("ttl", models.PositiveIntegerField()),
                ("address", models.GenericIPAddressField()),
                ("auto_reverse", models.BooleanField(default=False)),
                (
                    "zone",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dns_grpc.DNSZone",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
    ]
