# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dns.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='dns.proto',
  package='coredns.dns',
  syntax='proto3',
  serialized_options=b'Z\002pb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tdns.proto\x12\x0b\x63oredns.dns\"\x18\n\tDnsPacket\x12\x0b\n\x03msg\x18\x01 \x01(\x0c\"C\n\nClearCache\x12\r\n\x05label\x18\x01 \x01(\t\x12\x11\n\tdns_class\x18\x02 \x01(\r\x12\x13\n\x0brecord_type\x18\x03 \x01(\r2\xc3\x01\n\nDnsService\x12\x37\n\x05Query\x12\x16.coredns.dns.DnsPacket\x1a\x16.coredns.dns.DnsPacket\x12=\n\tAXFRQuery\x12\x16.coredns.dns.DnsPacket\x1a\x16.coredns.dns.DnsPacket0\x01\x12=\n\x0bUpdateQuery\x12\x16.coredns.dns.DnsPacket\x1a\x16.coredns.dns.DnsPacketB\x04Z\x02pbb\x06proto3'
)




_DNSPACKET = _descriptor.Descriptor(
  name='DnsPacket',
  full_name='coredns.dns.DnsPacket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='coredns.dns.DnsPacket.msg', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=50,
)


_CLEARCACHE = _descriptor.Descriptor(
  name='ClearCache',
  full_name='coredns.dns.ClearCache',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='coredns.dns.ClearCache.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_class', full_name='coredns.dns.ClearCache.dns_class', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='record_type', full_name='coredns.dns.ClearCache.record_type', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=119,
)

DESCRIPTOR.message_types_by_name['DnsPacket'] = _DNSPACKET
DESCRIPTOR.message_types_by_name['ClearCache'] = _CLEARCACHE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DnsPacket = _reflection.GeneratedProtocolMessageType('DnsPacket', (_message.Message,), {
  'DESCRIPTOR' : _DNSPACKET,
  '__module__' : 'dns_pb2'
  # @@protoc_insertion_point(class_scope:coredns.dns.DnsPacket)
  })
_sym_db.RegisterMessage(DnsPacket)

ClearCache = _reflection.GeneratedProtocolMessageType('ClearCache', (_message.Message,), {
  'DESCRIPTOR' : _CLEARCACHE,
  '__module__' : 'dns_pb2'
  # @@protoc_insertion_point(class_scope:coredns.dns.ClearCache)
  })
_sym_db.RegisterMessage(ClearCache)


DESCRIPTOR._options = None

_DNSSERVICE = _descriptor.ServiceDescriptor(
  name='DnsService',
  full_name='coredns.dns.DnsService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=122,
  serialized_end=317,
  methods=[
  _descriptor.MethodDescriptor(
    name='Query',
    full_name='coredns.dns.DnsService.Query',
    index=0,
    containing_service=None,
    input_type=_DNSPACKET,
    output_type=_DNSPACKET,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='AXFRQuery',
    full_name='coredns.dns.DnsService.AXFRQuery',
    index=1,
    containing_service=None,
    input_type=_DNSPACKET,
    output_type=_DNSPACKET,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateQuery',
    full_name='coredns.dns.DnsService.UpdateQuery',
    index=2,
    containing_service=None,
    input_type=_DNSPACKET,
    output_type=_DNSPACKET,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DNSSERVICE)

DESCRIPTOR.services_by_name['DnsService'] = _DNSSERVICE

# @@protoc_insertion_point(module_scope)
