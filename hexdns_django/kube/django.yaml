kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hexdns-zones
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: hexdns-django-conf
data:
  HOST: dns.glauca.digital
  DJANGO_SETTINGS_MODULE: hexdns_django.settings
  EXTERNAL_URL: "https://dns.glauca.digital"
  SENTRY_ENVIRONMENT: "prod"
  KEYCLOAK_SERVER_URL: "https://sso.as207960.net"
  KEYCLOAK_REALM: master
  KEYCLOAK_SCOPES: "openid email profile"
  KEYCLOAK_CLIENT_ID: "hexdns"
  DB_HOST: "cockroachdb"
  DB_NAME: "hexdns"
  DNSSEC_PUBKEY_LOCATIONS: "/pubkey/pubkey.pem;/pubkey/pubkey-ed25519.pem"
  DNSSEC_SIGNAL_PRIVKEY_LOCATION: "/signal-privkey/privkey.pem"
  DOMAINS_PUBKEY_LOCATION: "/domains-pubkey/pubkey.pem"
  DNSSEC_KEY_LOCATION: "/privkey/privkey.pem"
  BILLING_URL: "https://billing.as207960.net"
  DOMAINS_URL: "https://domains.glauca.digital"
  PAT_URL: "https://oauth.as207960.net"
  BILLING_PLAN_ID: "8db7eda0-4c84-45e4-b2d8-1438625daa92"
  RESOLVER_ADDR: "hexdns-unbound"
  RESOLVER_PORT: "5053"
  RESOLVER_NO_DNS64_ADDR: "hexdns-unbound-no-dns64"
  RESOLVER_NO_DNS64_PORT: "5053"
  FEEDBACK_URL: "https://feedback.glauca.digital"
  EMAIL_FROM: "Glauca HexDNS <dns@glauca.digital>"
  PYTHONUNBUFFERED: "TRUE"
  GITHUB_APP_NAME: "glauca-hexdns"
  GITHUB_APP_ID: "110438"
  GITHUB_CLIENT_ID: "Iv1.3bc70034ccad6abe"
  KUBE_IN_CLUSTER: "true"
  KUBE_NAMESPACE: "hexdns"
  ZONE_FILE_LOCATION: "/zones/"
  S3_ENDPOINT: "https://s3.as207960.net"
  S3_REGION: "garage"
  S3_BUCKET: "hexdns-django"
  S3_ZONE_BUCKET: "hexdns-zones"
  S3_ACCESS_KEY_ID: "GK145fe00f82e7b03c00d3f153"
  S3_CUSTOM_DOMAIN: "hexdns-django.content.as207960.net"
  STATIC_URL: "https://hexdns-django.content.as207960.net/"
  MEDIA_URL: "https://hexdns-django.content.as207960.net/"
  LISTMONK_TEMPLATE_ID: "3"
  LISTMONK_URL: "https://listmonk.as207960.net"
  POSTAL_PUBLIC_KEY: >-
    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQChELn1Fkauo6bduyGeXNca/z27OYNMd85JZMlNiycfFHaAXzgPd53OKVSbyzBuILFPYmzkfaF
    uOCW2qgvFd8cAye6qLsUAqEetiuRTPpAysX3hss1TqIML51kb0ADTmylKi3Hr553qrDy9AEMFmvaKnTH8o0YFozGk0QtlmiLtXQIDAQAB
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: hexdns-key-pub
data:
  pubkey.pem: |
    -----BEGIN PUBLIC KEY-----
    MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEUIh8VQuVXbUQwCjV4d+ptxKCvtbI
    6XcAdf9qnL1f21663JotyeXU/sNF6GUz5jutm1nmcrRbKS8DDGRz0fzoHA==
    -----END PUBLIC KEY-----
  pubkey-ed25519.pem: |
    -----BEGIN PUBLIC KEY-----
    MCowBQYDK2VwAyEAKleria5TLgUAxEz8G9IZZnbuI945LYnxe2PETiB63/0=
    -----END PUBLIC KEY-----
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hexdns
---
apiVersion: v1
kind: Namespace
metadata:
  name: hexdns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: hexdns
  name: hexdns:ingress-manager
rules:
  - apiGroups:
      - 'networking.k8s.io'
    resources:
      - ingresses
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hexdns:ingress-manager
  namespace: hexdns
roleRef:
  kind: Role
  name: hexdns:ingress-manager
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: hexdns
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: hexdns-redirect
  namespace: hexdns
spec:
  type: ExternalName
  externalName: hexdns-redirect.default.svc.kube-cluster.as207960.net
  ports:
    - port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-django
  labels:
    app: hexdns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hexdns
      part: django
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: django
    spec:
      serviceAccountName: hexdns
      volumes:
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
      initContainers:
        - name: django
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py collectstatic --noinput && python3 manage.py migrate"]
          volumeMounts: &volumeMounts
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
          envFrom: &envFrom
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
      containers:
        - name: gunicorn
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "4", "-b", "[::]:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "hexdns_django.wsgi:application"]
          ports:
            - containerPort: 8000
          volumeMounts: *volumeMounts
          envFrom: *envFrom
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-django
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: django
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-redirect
  labels:
    app: hexdns
    part: redirect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hexdns
      part: redirect
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: redirect
    spec:
      volumes:
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
      containers:
        - name: gunicorn
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "4", "-b", "[::]:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "dns_grpc.redirect:application"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
          envFrom:
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-redirect
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: redirect
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-celery
  labels:
    app: hexdns
    part: celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hexdns
      part: celery
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: celery
    spec:
      volumes:
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
        - name: celery-state
          emptyDir: {}
      containers:
        - name: celery
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["celery",  "-A", "hexdns_django", "worker", "--loglevel=INFO", "-c", "4"]
          livenessProbe:
            exec:
              command: [
                "bash",
                "-c",
                "celery -A hexdns_django inspect ping -d celery@$HOSTNAME | grep -q OK"
              ]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
            - mountPath: "/celery-state/"
              name: celery-state
          envFrom:
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-celery
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: celery
  policyTypes:
  - Ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-console
  labels:
    app: hexdns
    part: console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hexdns
      part: console
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: console
    spec:
      volumes:
        - name: knot
          persistentVolumeClaim:
            claimName: hexdns-knot
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
      containers:
        - name: console
          image: as207960/hexdns-django-root:(version)
          imagePullPolicy: Always
          command: ["bash"]
          tty: true
          stdin: true
          volumeMounts:
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/knot/"
              name: knot
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
          envFrom:
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-console
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: console
  policyTypes:
  - Ingress
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hexdns-validate-ns
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: hexdns
            part: validate-ns
            part-type: cronjob
        spec:
          volumes:
            - name: pubkey
              configMap:
                name: hexdns-key-pub
            - name: domains-pubkey
              configMap:
                name: domains-jwt-pub
            - name: signal-privkey
              secret:
                secretName: hexdns-signal-privkey
          containers:
            - name: django
              image: as207960/hexdns-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py validate-ns"]
              volumeMounts:
                - mountPath: "/pubkey/"
                  name: pubkey
                - mountPath: "/domains-pubkey/"
                  name: domains-pubkey
                - mountPath: "/signal-privkey/"
                  name: signal-privkey
              envFrom:
                - configMapRef:
                    name: hexdns-django-conf
                - secretRef:
                    name: hexdns-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: hexdns-django-secret
                - secretRef:
                    name: hexdns-keycloak
                  prefix: "KEYCLOAK_"
                - secretRef:
                    name: hexdns-github
                  prefix: "GITHUB_"
                - secretRef:
                    name: hexdns-google
                  prefix: "GOOGLE_"
                - secretRef:
                    name: hexdns-netnod
                  prefix: "NETNOD_"
                - secretRef:
                    name: hexdns-rpc
                - secretRef:
                    name: hexdns-s3
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hexdns-validate-charged
spec:
  schedule: "24 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: hexdns
            part: validate-charged
            part-type: cronjob
        spec:
          volumes:
            - name: pubkey
              configMap:
                name: hexdns-key-pub
            - name: domains-pubkey
              configMap:
                name: domains-jwt-pub
            - name: signal-privkey
              secret:
                secretName: hexdns-signal-privkey
          containers:
            - name: django
              image: as207960/hexdns-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py validate-charged"]
              volumeMounts:
                - mountPath: "/pubkey/"
                  name: pubkey
                - mountPath: "/domains-pubkey/"
                  name: domains-pubkey
                - mountPath: "/signal-privkey/"
                  name: signal-privkey
              envFrom:
                - configMapRef:
                    name: hexdns-django-conf
                - secretRef:
                    name: hexdns-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: hexdns-django-secret
                - secretRef:
                    name: hexdns-keycloak
                  prefix: "KEYCLOAK_"
                - secretRef:
                    name: hexdns-github
                  prefix: "GITHUB_"
                - secretRef:
                    name: hexdns-google
                  prefix: "GOOGLE_"
                - secretRef:
                    name: hexdns-netnod
                  prefix: "NETNOD_"
                - secretRef:
                    name: hexdns-rpc
                - secretRef:
                    name: hexdns-s3
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hexdns-transfer-secondary
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"axfr-ip6-ippool\"]"
          labels:
            app: hexdns
            part: transfer-secondary
            part-type: cronjob
        spec:
          shareProcessNamespace: true
          volumes:
            - name: pubkey
              configMap:
                name: hexdns-key-pub
            - name: domains-pubkey
              configMap:
                name: domains-jwt-pub
            - name: tmp-pod
              emptyDir: {}
            - name: signal-privkey
              secret:
                secretName: hexdns-signal-privkey
          containers:
            - name: django
              image: as207960/hexdns-django:(version)
              imagePullPolicy: Always
              command: ["/bin/bash", "-c"]
              args:
                - |
                  trap "touch /tmp/pod/main-terminated" EXIT
                  sleep 15
                  python3 manage.py transfer-secondary
              volumeMounts:
                - mountPath: /tmp/pod
                  name: tmp-pod
                - mountPath: "/pubkey/"
                  name: pubkey
                - mountPath: "/domains-pubkey/"
                  name: domains-pubkey
                - mountPath: "/signal-privkey/"
                  name: signal-privkey
              envFrom:
                - configMapRef:
                    name: hexdns-django-conf
                - secretRef:
                    name: hexdns-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: hexdns-django-secret
                - secretRef:
                    name: hexdns-keycloak
                  prefix: "KEYCLOAK_"
                - secretRef:
                    name: hexdns-github
                  prefix: "GITHUB_"
                - secretRef:
                    name: hexdns-google
                  prefix: "GOOGLE_"
                - secretRef:
                    name: hexdns-netnod
                  prefix: "NETNOD_"
                - secretRef:
                    name: hexdns-rpc
                - secretRef:
                    name: hexdns-s3
            - name: clatd
              image: as207960/clatd
              command: ["/bin/bash", "-c"]
              args:
                - |
                  /clatd/clatd clat-v6-addr=fd2e:ae7d:58e3:f6ab::1 v4-conncheck-enable=no 'script-up=ip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' &
                  CHILD_PID=$!
                  (while true; do if [[ -f "/tmp/pod/main-terminated" ]]; then kill -9 $CHILD_PID; fi; sleep 1; done) &
                  wait $CHILD_PID
                  if [[ -f "/tmp/pod/main-terminated" ]]; then exit 0; fi
              volumeMounts:
                - mountPath: /tmp/pod
                  name: tmp-pod
                  readOnly: true
              securityContext:
                privileged: true
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hexdns-update-aname
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: hexdns
            part: update-aname
            part-type: cronjob
        spec:
          shareProcessNamespace: true
          volumes:
            - name: pubkey
              configMap:
                name: hexdns-key-pub
            - name: domains-pubkey
              configMap:
                name: domains-jwt-pub
            - name: signal-privkey
              secret:
                secretName: hexdns-signal-privkey
          containers:
            - name: django
              image: as207960/hexdns-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py update-aname-zones"]
              volumeMounts:
                - mountPath: "/pubkey/"
                  name: pubkey
                - mountPath: "/domains-pubkey/"
                  name: domains-pubkey
                - mountPath: "/signal-privkey/"
                  name: signal-privkey
              envFrom:
                - configMapRef:
                    name: hexdns-django-conf
                - secretRef:
                    name: hexdns-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: hexdns-django-secret
                - secretRef:
                    name: hexdns-keycloak
                  prefix: "KEYCLOAK_"
                - secretRef:
                    name: hexdns-github
                  prefix: "GITHUB_"
                - secretRef:
                    name: hexdns-google
                  prefix: "GOOGLE_"
                - secretRef:
                    name: hexdns-netnod
                  prefix: "NETNOD_"
                - secretRef:
                    name: hexdns-rpc
                - secretRef:
                    name: hexdns-s3
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hexdns-resign
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 900
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: hexdns
            part: resign
            part-type: cronjob
        spec:
          shareProcessNamespace: true
          volumes:
            - name: pubkey
              configMap:
                name: hexdns-key-pub
            - name: domains-pubkey
              configMap:
                name: domains-jwt-pub
            - name: signal-privkey
              secret:
                secretName: hexdns-signal-privkey
          containers:
            - name: django
              image: as207960/hexdns-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py update-all-zones"]
              volumeMounts:
                - mountPath: "/pubkey/"
                  name: pubkey
                - mountPath: "/domains-pubkey/"
                  name: domains-pubkey
                - mountPath: "/signal-privkey/"
                  name: signal-privkey
              envFrom:
                - configMapRef:
                    name: hexdns-django-conf
                - secretRef:
                    name: hexdns-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: hexdns-django-secret
                - secretRef:
                    name: hexdns-keycloak
                  prefix: "KEYCLOAK_"
                - secretRef:
                    name: hexdns-github
                  prefix: "GITHUB_"
                - secretRef:
                    name: hexdns-google
                  prefix: "GOOGLE_"
                - secretRef:
                    name: hexdns-netnod
                  prefix: "NETNOD_"
                - secretRef:
                    name: hexdns-rpc
                - secretRef:
                    name: hexdns-s3
          restartPolicy: OnFailure
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-cronjob
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part-type: cronjob
  policyTypes:
  - Ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-grpc
  labels:
    app: hexdns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hexdns
      part: grpc
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: grpc
    spec:
      volumes:
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: privkey
          secret:
            secretName: hexdns-key-priv
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
      containers:
        - name: grpc
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py grpcserver -v 2 --traceback --max_workers 128"]
          ports:
            - containerPort: 50051
          volumeMounts:
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/privkey/"
              name: privkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
          envFrom:
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-grpc
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: grpc
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: hexdns
          part: cache
    - podSelector:
        matchLabels:
          app: hexdns
          part: update
    - podSelector:
        matchLabels:
          app: hexdns
          part: axfr
    ports:
    - protocol: TCP
      port: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hexdns-run-rpc
  labels:
    app: hexdns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hexdns
      part: rpc
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: hexdns
        part: rpc
    spec:
      volumes:
        - name: pubkey
          configMap:
            name: hexdns-key-pub
        - name: privkey
          secret:
            secretName: hexdns-key-priv
        - name: domains-pubkey
          configMap:
            name: domains-jwt-pub
        - name: signal-privkey
          secret:
            secretName: hexdns-signal-privkey
      containers:
        - name: rpc
          image: as207960/hexdns-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py run-rpc"]
          volumeMounts:
            - mountPath: "/pubkey/"
              name: pubkey
            - mountPath: "/domains-pubkey/"
              name: domains-pubkey
            - mountPath: "/privkey/"
              name: privkey
            - mountPath: "/signal-privkey/"
              name: signal-privkey
          envFrom:
            - configMapRef:
                name: hexdns-django-conf
            - secretRef:
                name: hexdns-db-creds
              prefix: "DB_"
            - secretRef:
                name: hexdns-django-secret
            - secretRef:
                name: hexdns-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: hexdns-github
              prefix: "GITHUB_"
            - secretRef:
                name: hexdns-google
              prefix: "GOOGLE_"
            - secretRef:
                name: hexdns-netnod
              prefix: "NETNOD_"
            - secretRef:
                name: hexdns-rpc
            - secretRef:
                name: hexdns-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-rpc
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: rpc
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hexdns-keycloak-events
spec:
  podSelector:
    matchLabels:
      app: hexdns
      part: keycloak-events
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: hexdns-django
  labels:
    app: hexdns
spec:
  selector:
    app: hexdns
    part: django
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: hexdns-redirect
  labels:
    app: hexdns
    part: redirect
spec:
  selector:
    app: hexdns
    part: redirect
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: hexdns-grpc
  labels:
    app: hexdns
spec:
  selector:
    app: hexdns
    part: grpc
  ports:
    - port: 50051
      targetPort: 50051
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hexdns-ingress
  annotations:
    cert-manager.io/cluster-issuer: "gts"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - dns.glauca.digital
      secretName: dns-tls
  rules:
    - host: dns.glauca.digital
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hexdns-django
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hexdns-ingress-dyndns
  annotations:
    cert-manager.io/cluster-issuer: "gts"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - dns.glauca.digital
      secretName: dns-tls
  rules:
    - host: dns.glauca.digital
      http:
        paths:
          - path: /nic/update
            pathType: Exact
            backend:
              service:
                name: hexdns-django
                port:
                  number: 8000
